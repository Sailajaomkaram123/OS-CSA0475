i)CREATE
#include <stdio.h>
#include <pthread.h>

void* thread_function(void* arg) {
    int thread_id = *((int*)arg);
    printf("Hello from Thread %d\n", thread_id);
    pthread_exit(NULL);
}

int main() {
    pthread_t thread_id;
    int arg = 1;
    
    if (pthread_create(&thread_id, NULL, thread_function, &arg) == 0) {
        printf("Thread created successfully.\n");
    } else {
        printf("Failed to create the thread.\n");
    }

    pthread_join(thread_id, NULL); // Wait for the thread to finish

    printf("Main thread exiting.\n");
    return 0;
}

ii)JOIN
#include <stdio.h>
#include <pthread.h>

void* thread_function(void* arg) {
    int thread_id = *((int*)arg);
    printf("Thread %d is running.\n", thread_id);
    pthread_exit(NULL);
}

int main() {
    pthread_t thread_id;
    int arg = 1;
    
    if (pthread_create(&thread_id, NULL, thread_function, &arg) == 0) {
        printf("Thread created successfully.\n");
    } else {
        printf("Failed to create the thread.\n");
    }

    if (pthread_join(thread_id, NULL) == 0) {
        printf("Thread joined successfully.\n");
    } else {
        printf("Failed to join the thread.\n");
    }

    printf("Main thread exiting.\n");
    return 0;
}

iii)EQUAL
#include <stdio.h>
#include <pthread.h>

void* thread_function(void* arg) {
    pthread_t current_thread = pthread_self();
    if (pthread_equal(current_thread, *((pthread_t*)arg))) {
        printf("These threads are equal.\n");
    } else {
        printf("These threads are not equal.\n");
    }
    pthread_exit(NULL);
}

int main() {
    pthread_t thread_id;
    
    if (pthread_create(&thread_id, NULL, thread_function, &thread_id) == 0) {
        printf("Thread created successfully.\n");
    } else {
        printf("Failed to create the thread.\n");
    }

    pthread_join(thread_id, NULL);

    printf("Main thread exiting.\n");
    return 0;
}

iv)EXIT
#include <stdio.h>
#include <pthread.h>

void* thread_function(void* arg) {
    printf("Thread is running.\n");
    pthread_exit(NULL);
}

int main() {
    pthread_t thread_id;
    
    if (pthread_create(&thread_id, NULL, thread_function, NULL) == 0) {
        printf("Thread created successfully.\n");
    } else {
        printf("Failed to create the thread.\n");
    }

    pthread_join(thread_id, NULL);

    printf("Main thread exiting.\n");
    return 0;
}
